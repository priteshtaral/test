<!-- src/app/app.component.html -->
<form [formGroup]="form" (ngSubmit)="submit()">
  <!-- Your form fields go here -->
  <button type="submit">Submit</button>
</form>

<!-- Display formatted form data -->
<pre>{{ formDataDisplay }}</pre>



import { Component, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { FormService } from './form.service';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  form: FormGroup;
  formDataDisplay: string;

  constructor(private formService: FormService) {}

  ngOnInit() {
    this.form = this.formService.createFormGroupFromJson(/* your JSON structure */);
    this.updateFormDataDisplay();

    // Subscribe to form value changes
    this.form.valueChanges.subscribe(() => {
      this.updateFormDataDisplay();
    });
  }

  updateFormDataDisplay() {
    this.formDataDisplay = JSON.stringify(this.form.value, null, 2);
  }

  submit() {
    console.log(this.form.value);
  }
}




import { Injectable } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Injectable({
  providedIn: 'root'
})
export class FormService {
  constructor(private fb: FormBuilder) {}

  createFormGroupFromJson(jsonConfig: any): FormGroup {
    const formGroup = this.fb.group({});
    jsonConfig.sections.forEach(section => {
      const sectionGroup = this.fb.group({});
      section.fields.sort((a, b) => a.elementSequenceNumber - b.elementSequenceNumber).forEach(field => {
        const control = this.fb.control(field.value || '', this.mapValidators(field.validators));
        sectionGroup.addControl(field.name, control);
      });
      formGroup.addControl(section.sectionName, sectionGroup);
    });
    return formGroup;
  }

  private mapValidators(validators) {
    const mappedValidators = [];
    // Example: Add your validation mapping logic here
    return mappedValidators;
  }
}

{
  "sections": [
    {
      "sectionName": "Personal Information",
      "fields": [
        {
          "label": "First Name",
          "type": "text",
          "name": "firstName",
          "elementSequenceNumber": 1,
          "validators": []
        },
        {
          "label": "Last Name",
          "type": "text",
          "name": "lastName",
          "elementSequenceNumber": 2,
          "validators": []
        }
      ]
    },
    {
      "sectionName": "Contact Details",
      "fields": [
        {
          "label": "Email",
          "type": "email",
          "name": "email",
          "elementSequenceNumber": 1,
          "validators": []
        }
      ]
    }
  ]
}
