import { Injectable } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Injectable({
  providedIn: 'root'
})
export class DynamicFormService {
  constructor(private fb: FormBuilder) {}

  createFormGroup(formConfig: any): FormGroup {
    const group = this.fb.group({});
    formConfig.fields.forEach(field => {
      const validators = this.mapValidators(field.validators);
      group.addControl(field.name, this.fb.control('', validators));
    });
    return group;
  }

  private mapValidators(validatorsConfig: string[]): Validators[] {
    const validators = [];
    if (validatorsConfig) {
      for (const validator of validatorsConfig) {
        switch (validator) {
          case 'required':
            validators.push(Validators.required);
            break;
          case 'email':
            validators.push(Validators.email);
            break;
          // Add other validators here as needed
        }
      }
    }
    return validators;
  }
}



import { Component, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { DynamicFormService } from './dynamic-form.service';

@Component({
  selector: 'app-dynamic-form',
  templateUrl: './dynamic-form.component.html',
  styleUrls: ['./dynamic-form.component.css']
})
export class DynamicFormComponent implements OnInit {
  form: FormGroup;
  formConfig = {
    "fields": [
      {
        "type": "text",
        "label": "First Name",
        "name": "firstName",
        "validators": ["required"]
      },
      {
        "type": "text",
        "label": "Last Name",
        "name": "lastName",
        "validators": ["required"]
      },
      {
        "type": "email",
        "label": "Email",
        "name": "email",
        "validators": ["required", "email"]
      }
    ]
  };

  constructor(private dynamicFormService: DynamicFormService) {}

  ngOnInit() {
    this.form = this.dynamicFormService.createFormGroup(this.formConfig);
  }
}



<!-- dynamic-form.component.html -->
<form [formGroup]="form" (ngSubmit)="onSubmit()">
  <div *ngFor="let field of formConfig.fields">
    <label>{{field.label}}</label>
    <input *ngIf="field.type !== 'textarea'" [type]="field.type" [formControlName]="field.name">
    <textarea *ngIf="field.type === 'textarea'" [formControlName]="field.name"></textarea>
  </div>
  <button type="submit">Submit</button>
</form>
